@value gridContainer, v, mv, h , layout_1, layout_2 from './ProtectedRoute.module.css';

.profile {
}
.header {
  display: flex;
  justify-content: space-around;
  align-items: center;
  max-height: 200px;
  min-height: 200px;
  max-width: 700px;
  background-color: var(--text-color);
  border-radius: 10px;
  margin: auto;
}

.header > div > div {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 30px;
}

.header input[type='file'] {
  position: absolute;
  left: 0px;
  height: 100%;
  width: 100%;
  opacity: 0;
}
.header > span:first-child {
  position: relative;
  margin: 4rem 1rem 4rem 10px;
}

.header > span:first-child:hover .imageText {
  opacity: 1;
}

.imageText {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1px;
  position: absolute;
  bottom: 0;
  background: var(--bg-color);
  color: #f1f1f1;
  width: 100%;
  transition: 0.5s ease;
  opacity: 0;
  color: var(--text-color);
  font-size: 20px;
  padding: 20px;
  text-align: center;
}

.header .headerLogo {
  width: 160px;
  height: 160px;
  align-self: center;
  border: 1px solid white;
  border-radius: 6px;
  padding: 10px;
}
h1.username {
  color: var(--bg-color);
  margin: 0px;
  padding: 0px;
}

.header > div img {
  width: 40px;
  height: auto;
  margin-right: 14px;
}
/* ------------------------------------------------- */
.classificationBlocksContainer {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto 1fr;
  background-color: var(--bg-color);
  padding: 10px;
  border-radius: 10px;
}

.pagelinkContainer {
  grid-column: span 4;
  font-size: 1.3rem;
  font-weight: 600;
  padding: 1rem 0rem 1rem 1rem;
  display: flex;
  align-items: center;
  gap: 10px;
}
/* .pagelinkContainer:hover * {
  color: slateblue;
} */
.pagelink,
.pagelinkContainer > i {
  color: cornflowerblue;
  cursor: pointer;
}
.classificationBlock {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 10px;
  padding: 10px;
  border: 1px solid var(--text-color);
  border-radius: 6px;
  background-color: var(--text-color);
  color: var(--bg-color);
}

.classificationBlock > img {
  width: 90px;
  height: auto;
}
.classificationBlock > div {
  display: flex;
  align-items: center;
  margin-top: 1rem;
  width: 161px;
  justify-content: space-between;
}
.classificationBlock > div > img {
  height: 40px;
  width: auto;
}
.classificationBlock > div:last-of-type > img {
  margin-left: -17px;
}
.classificationBlock > div > div {
  font-size: 1.5rem;
  font-weight: 600;
  min-width: 20px;
}
/* ------------------------------------ */
.donutContainer {
  width: 100%;
  height: auto;
  grid-column: 5/6;
  grid-row: 1 / 2;
  margin: auto;
}

.legendContainer {
  font-size: 1.3rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 1rem;
}

.listStyles {
  list-style-type: none;
  padding: 0px;
  margin: 0px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  font-size: 1.3rem;
  font-weight: 600;
}
.listStyles > div {
  display: flex;
  align-items: center;
  gap: 5px;
  cursor: pointer;
}

.listStyles > div > div {
  width: 20px;
  height: 20px;
  background: var(--header-color);
  border-radius: 5px;
}
.verticalflex {
  display: flex;
  flex-direction: column;
  width: 90px;
  gap: 10px;
}

.valuesContainer > div {
  margin-top: 50%;
  margin-bottom: 50%;
}

/* ------------------------ */

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  z-index: 1;
  margin-bottom: 44px;
  margin-left: -30px;
}

.tooltip:hover .tooltiptext {
  visibility: visible;
}
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* -------- layout ----------- */
.gridContainer.layout_1.v .profile,
.gridContainer.layout_1.mv .profile,
.gridContainer.layout_2.v .profile,
.gridContainer.layout_2.mv .profile {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}
.gridContainer.layout_1.h .profile,
.gridContainer.layout_2.h .profile{
  grid-column: 1 / 2;
  grid-row: 2 / 3;
}